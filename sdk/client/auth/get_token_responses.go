// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/a-berahman/auth-api/sdk/models"
)

// GetTokenReader is a Reader for the GetToken structure.
type GetTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTokenOK creates a GetTokenOK with default headers values
func NewGetTokenOK() *GetTokenOK {
	return &GetTokenOK{}
}

/*GetTokenOK handles this case with default header values.

Data structure generate token response
*/
type GetTokenOK struct {
	Payload *models.TokenResponse
}

func (o *GetTokenOK) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] getTokenOK  %+v", 200, o.Payload)
}

func (o *GetTokenOK) GetPayload() *models.TokenResponse {
	return o.Payload
}

func (o *GetTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenBadRequest creates a GetTokenBadRequest with default headers values
func NewGetTokenBadRequest() *GetTokenBadRequest {
	return &GetTokenBadRequest{}
}

/*GetTokenBadRequest handles this case with default header values.

Generic error message returned as a string
*/
type GetTokenBadRequest struct {
	Payload *models.GenericError
}

func (o *GetTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] getTokenBadRequest  %+v", 400, o.Payload)
}

func (o *GetTokenBadRequest) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenForbidden creates a GetTokenForbidden with default headers values
func NewGetTokenForbidden() *GetTokenForbidden {
	return &GetTokenForbidden{}
}

/*GetTokenForbidden handles this case with default header values.

Generic error message returned as a string
*/
type GetTokenForbidden struct {
	Payload *models.GenericError
}

func (o *GetTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] getTokenForbidden  %+v", 403, o.Payload)
}

func (o *GetTokenForbidden) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenInternalServerError creates a GetTokenInternalServerError with default headers values
func NewGetTokenInternalServerError() *GetTokenInternalServerError {
	return &GetTokenInternalServerError{}
}

/*GetTokenInternalServerError handles this case with default header values.

Generic error message returned as a string
*/
type GetTokenInternalServerError struct {
	Payload *models.GenericError
}

func (o *GetTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] getTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTokenInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
