// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/a-berahman/auth-api/sdk/models"
)

// ValidateTokenReader is a Reader for the ValidateToken structure.
type ValidateTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateTokenOK creates a ValidateTokenOK with default headers values
func NewValidateTokenOK() *ValidateTokenOK {
	return &ValidateTokenOK{}
}

/*ValidateTokenOK handles this case with default header values.

ValidateResponse is a validation returns structure in response
*/
type ValidateTokenOK struct {
	/*the sessionID of user
	 */
	Sid string
}

func (o *ValidateTokenOK) Error() string {
	return fmt.Sprintf("[POST /v1/auth/validate][%d] validateTokenOK ", 200)
}

func (o *ValidateTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header sid
	o.Sid = response.GetHeader("sid")

	return nil
}

// NewValidateTokenBadRequest creates a ValidateTokenBadRequest with default headers values
func NewValidateTokenBadRequest() *ValidateTokenBadRequest {
	return &ValidateTokenBadRequest{}
}

/*ValidateTokenBadRequest handles this case with default header values.

Generic error message returned as a string
*/
type ValidateTokenBadRequest struct {
	Payload *models.GenericError
}

func (o *ValidateTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/auth/validate][%d] validateTokenBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateTokenBadRequest) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ValidateTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateTokenForbidden creates a ValidateTokenForbidden with default headers values
func NewValidateTokenForbidden() *ValidateTokenForbidden {
	return &ValidateTokenForbidden{}
}

/*ValidateTokenForbidden handles this case with default header values.

Generic error message returned as a string
*/
type ValidateTokenForbidden struct {
	Payload *models.GenericError
}

func (o *ValidateTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/auth/validate][%d] validateTokenForbidden  %+v", 403, o.Payload)
}

func (o *ValidateTokenForbidden) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ValidateTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
